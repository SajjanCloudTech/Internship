version: 0.2

phases:
  install:
    commands:
      - echo "Updating system..."
      - yum update -y
      - yum install -y aws-cli unzip docker

  pre_build:
    commands:
      - echo "Logging into AWS ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - echo "Checking for old Docker images..."
      - docker ps -q -f name=$ECR_REPOSITORY && docker stop $ECR_REPOSITORY && docker rm $ECR_REPOSITORY || echo "No existing container to remove."
      - echo "Removing old Docker images..."
      - docker images -q $ECR_REPOSITORY && docker rmi $ECR_REPOSITORY || echo "No old images found."

  build:
    commands:
      - echo "Navigating to Dockerfile directory..."
      - cd week-5/TerraformNodeJSTodoApp
      - echo "Building Docker image..."
      - docker build -t $ECR_REPOSITORY .
      - docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

  post_build:
    commands:
      - echo "Pushing Docker image to AWS ECR..."
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - echo "Creating deployment artifact..."
      - printf '{"ImageURI":"%s"}' $ECR_REGISTRY/$ECR_REPOSITORY:latest > imageDetail.json
      - aws s3 cp imageDetail.json s3://$S3_BUCKET_NAME/imageDetail.json
      - echo "Build completed successfully!"

artifacts:
  files:
    - imageDetail.json
