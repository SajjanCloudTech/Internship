version: 0.2

env:
  variables:
    AWS_REGION: "${AWS_REGION}"
    ECR_REPOSITORY_URL: "${ECR_REPOSITORY_URL}"
    ECR_REPO_NAME: "${ECR_REPO_NAME}"
    S3_BUCKET: "${S3_BUCKET}"

phases:
  install:
    commands:
      - echo "Installing required packages..."
      - apt-get update -y
      -  apt-get install -y unzip docker.io  
      - apt-get install -y python3 python3-pip 
      - pip3 install --upgrade awscli 
      - service docker start  

  pre_build:
    commands:
      - echo "Logging into AWS ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URL
      - echo "Removing old Docker images (if any)..."
      - docker images -q $ECR_REPO_NAME && docker rmi -f $(docker images -q $ECR_REPO_NAME) || echo "No old images found."

  build:
    commands:
      - echo "Building Docker image for Node.js To-Do App..."
      - docker build -t $ECR_REPO_NAME .
      - docker tag $ECR_REPO_NAME:latest $ECR_REPOSITORY_URL:latest

  post_build:
    commands:
      - echo "Pushing Docker image to AWS ECR..."
      - docker push $ECR_REPOSITORY_URL:latest
      - echo "Generating deployment artifact..."
      - printf '{"ImageURI":"%s"}' $ECR_REPOSITORY_URL:latest > imageDetail.json
      - echo "Uploading deployment artifact to S3..."
      - aws s3 cp imageDetail.json s3://$S3_BUCKET/imageDetail.json
      - echo "Build and push completed successfully!"

artifacts:
  files:
    - imageDetail.json
